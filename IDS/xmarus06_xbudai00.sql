DROP SEQUENCE ID_OBORU_S;
DROP SEQUENCE ID_AKCE_S;
DROP SEQUENCE ID_REZERVACE_S;
DROP SEQUENCE ID_VYBAVENI_S;

DROP TABLE VYBAVENI CASCADE CONSTRAINTS;
DROP TABLE REZERVACE_NA_UCEBNU CASCADE CONSTRAINTS;
DROP TABLE UCEBNA CASCADE CONSTRAINTS;
DROP TABLE REZERVACE CASCADE CONSTRAINTS;
DROP TABLE AKCE CASCADE CONSTRAINTS;
DROP TABLE PRACOVNIK_V_PREDMETU CASCADE CONSTRAINTS;
DROP TABLE PRACOVNIK CASCADE CONSTRAINTS;
DROP TABLE PREDMET_V_OBORU CASCADE CONSTRAINTS;
DROP TABLE PREDMET_V_ROCNIKU CASCADE CONSTRAINTS;
DROP TABLE PREDMET CASCADE CONSTRAINTS;
DROP TABLE OBOR CASCADE CONSTRAINTS;
DROP MATERIALIZED VIEW MV_1;


CREATE TABLE OBOR
(
  ID_OBORU INT NOT NULL,
  NAZEV_OBORU VARCHAR(50) NOT NULL,
  AKREDITACE_DO DATE NOT NULL,
  CONSTRAINT OBOR_PK PRIMARY KEY (ID_OBORU)
);

CREATE SEQUENCE ID_OBORU_S;

CREATE OR REPLACE TRIGGER OBOR_TRIG
BEFORE INSERT ON OBOR
FOR EACH ROW
WHEN (new.ID_OBORU IS NULL)
BEGIN
SELECT ID_OBORU_S.NEXTVAL
INTO :new.ID_OBORU
FROM DUAL;
END;
/



CREATE TABLE PREDMET
(
  ZKRATKA VARCHAR(4) NOT NULL,
  ROK INT NOT NULL,
  JMENO VARCHAR(50) NOT NULL,
  SEMESTR CHAR(5) NOT NULL,
  OBOR INT NOT NULL,
  CONSTRAINT PREDMET_PK PRIMARY KEY (ZKRATKA, ROK),
  CONSTRAINT PREDMET_OBOR_FK FOREIGN KEY (OBOR) REFERENCES OBOR,
  CONSTRAINT VALIDNI_SEMESTR CHECK (SEMESTR = 'ZIMNI' OR SEMESTR = 'LETNI')
);

CREATE TABLE PREDMET_V_ROCNIKU
(
  ZKRATKA VARCHAR(4) NOT NULL,
  ROK INT NOT NULL,
  ROCNIK INT NOT NULL,
  CONSTRAINT PREDMET_V_ROCNIKU_PK PRIMARY KEY (ZKRATKA, ROK, ROCNIK),
  CONSTRAINT PREDMET_V_ROCNIKU_PREDMET_FK FOREIGN KEY (ZKRATKA, ROK) REFERENCES PREDMET
);

CREATE TABLE PREDMET_V_OBORU
(
  ZKRATKA VARCHAR(4) NOT NULL,
  ROK INT NOT NULL,
  ID_OBORU INT NOT NULL,
  CONSTRAINT PREDMET_V_OBORU_PK PRIMARY KEY (ZKRATKA, ROK, ID_OBORU),
  CONSTRAINT PREDMET_V_OBORU_PREDMET_FK FOREIGN KEY (ZKRATKA, ROK) REFERENCES PREDMET,
  CONSTRAINT PREDMET_V_OBORU_OBOR_FK FOREIGN KEY (ID_OBORU) REFERENCES OBOR
);

CREATE TABLE PRACOVNIK
(
  LOGIN VARCHAR(30) NOT NULL,
  JMENO VARCHAR(50) NOT NULL,
  PRIJMENI VARCHAR(50) NOT NULL,
  KANCELAR VARCHAR(10),
  CONSTRAINT PRACOVNIK_PK PRIMARY KEY (LOGIN)
);

CREATE TABLE PRACOVNIK_V_PREDMETU
(
  ZKRATKA VARCHAR(4) NOT NULL,
  ROK INT NOT NULL,
  LOGIN VARCHAR(30) NOT NULL,
  CONSTRAINT PRAC_V_PREDMETU_PK PRIMARY KEY (ZKRATKA, ROK, LOGIN),
  CONSTRAINT PRAC_V_PREDMETU_PREDMET_FK FOREIGN KEY (ZKRATKA, ROK) REFERENCES PREDMET,
  CONSTRAINT PRAC_V_PREDMETU_PRACOVNIK_FK FOREIGN KEY (LOGIN) REFERENCES PRACOVNIK
);

CREATE TABLE AKCE
(
  ID_AKCE INT NOT NULL,
  JMENO VARCHAR(50) NOT NULL,
  TYP VARCHAR(50) NOT NULL,
  PREDMET VARCHAR(4) NOT NULL,
  ROK INT NOT NULL,
  CONSTRAINT AKCE_PK PRIMARY KEY (ID_AKCE),
  CONSTRAINT AKCE_PREDMET_FK FOREIGN KEY (PREDMET, ROK) REFERENCES PREDMET
);

CREATE SEQUENCE ID_AKCE_S;

CREATE TABLE REZERVACE
(
  ID_REZERVACE INT NOT NULL,
  REZERVACE_ZACATEK DATE NOT NULL,
  REZERVACE_KONEC DATE NOT NULL,
  CAS_VZNIKU DATE NOT NULL,
  VYTVORIL VARCHAR(30) NOT NULL,
  ID_AKCE INT NOT NULL,
  CONSTRAINT REZERVACE_PK PRIMARY KEY (ID_REZERVACE),
  CONSTRAINT REZERVACE_PRACOVNIK_FK FOREIGN KEY (VYTVORIL) REFERENCES PRACOVNIK,
  CONSTRAINT REZERVACE_AKCE_FK FOREIGN KEY (ID_AKCE) REFERENCES AKCE,
  CONSTRAINT VALIDNI_INTERVAL CHECK (REZERVACE_KONEC > REZERVACE_ZACATEK)
);


CREATE SEQUENCE ID_REZERVACE_S;

CREATE TABLE UCEBNA
(
  BUDOVA CHAR(1) NOT NULL,
  PATRO INT NOT NULL,
  OZNACENI INT NOT NULL,
  KAPACITA INT NOT NULL,
  CONSTRAINT UCEBNA_PK PRIMARY KEY (BUDOVA, PATRO, OZNACENI),
  CONSTRAINT VALIDNI_BUDOVA CHECK (BUDOVA >= 'A' AND BUDOVA <= 'S'),
  CONSTRAINT VALIDNI_PATRO CHECK (PATRO >= -2 AND PATRO <= 4),
  CONSTRAINT VALIDNI_OZNACENI CHECK (OZNACENI >= 0 AND OZNACENI <= 99)
);

CREATE TABLE REZERVACE_NA_UCEBNU
(
  ID_REZERVACE INT NOT NULL,
  BUDOVA CHAR(1) NOT NULL,
  PATRO INT NOT NULL,
  OZNACENI INT NOT NULL,
  CONSTRAINT REZERVACE_NA_UCEBNU_PK PRIMARY KEY (ID_REZERVACE, BUDOVA, PATRO, OZNACENI),
  CONSTRAINT REZERVACE_UCEBNA_FK FOREIGN KEY (BUDOVA, PATRO, OZNACENI) REFERENCES UCEBNA,
  CONSTRAINT REZERVACE_REZERVACE_FK FOREIGN KEY (ID_REZERVACE) REFERENCES REZERVACE
);

CREATE OR REPLACE TRIGGER REZERVACE_NA_UCEBNU_TRIG
BEFORE INSERT ON REZERVACE_NA_UCEBNU
FOR EACH ROW
DECLARE POCET_K INT;
BEGIN SELECT COALESCE((
            SELECT COUNT(*)
            FROM REZERVACE R1
            JOIN REZERVACE_NA_UCEBNU RNU1 ON (R1.ID_REZERVACE = RNU1.ID_REZERVACE)
            JOIN REZERVACE R2 ON (:NEW.ID_REZERVACE = R2.ID_REZERVACE)
            WHERE RNU1.BUDOVA = :NEW.BUDOVA
            AND RNU1.PATRO = :NEW.PATRO
            AND RNU1.OZNACENI = :NEW.OZNACENI
            AND (R1.REZERVACE_ZACATEK BETWEEN R2.REZERVACE_ZACATEK AND R2.REZERVACE_KONEC
            OR R1.REZERVACE_KONEC BETWEEN R2.REZERVACE_ZACATEK AND R2.REZERVACE_KONEC)
            ), 0)
            INTO POCET_K FROM DUAL;

IF POCET_K > 0 THEN
RAISE_APPLICATION_ERROR(-20069, 'Pokus o duplicitnu rezervaciu na ucebnu');
END IF;
END;
/





CREATE TABLE VYBAVENI
(
  ID_VYBAVENI INT NOT NULL,
  BUDOVA CHAR(1) NOT NULL,
  PATRO INT NOT NULL,
  OZNACENI INT NOT NULL,
  STUDENTSKY INT NOT NULL,
  DATUM_PORIZENI DATE NOT NULL,
  DRUH VARCHAR(15) NOT NULL,
  MODEL_VYBAVENI VARCHAR(50),
  PRIPOJENI VARCHAR(50),
  UHLOPRICKA VARCHAR(50),
  PROCESOR VARCHAR(50),
  RAM INT,
  HDD INT,
  OS1 VARCHAR(50),
  OS2 VARCHAR(50),
  RYCHLOST_SITE INT,
  CONSTRAINT VYBAVENI_PK PRIMARY KEY (ID_VYBAVENI),
  CONSTRAINT VYBAVENI_UCEBNA_FK FOREIGN KEY (BUDOVA, PATRO, OZNACENI) REFERENCES UCEBNA,
  CONSTRAINT VALIDNI_STUDENTSKY CHECK (STUDENTSKY = 1 OR STUDENTSKY = 0)
);


CREATE SEQUENCE ID_VYBAVENI_S;

INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Grafika a multimedia', TO_DATE('2017-10-02', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Pocitacove systemy', TO_DATE('2018-05-04', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Inteligentni systemy', TO_DATE('2016-12-12', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (NULL, 'Matematicke metody', TO_DATE('2019-11-05', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Zvuk', TO_DATE('2016-12-12', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Insformacne systemy', TO_DATE('2016-12-12', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Teoreticka informatika', TO_DATE('2016-12-12', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Pocitacove site', TO_DATE('2016-12-12', 'yyyy-mm-dd'));
INSERT INTO OBOR VALUES (ID_OBORU_S.NEXTVAL, 'Paralelni systemy', TO_DATE('2016-12-12', 'yyyy-mm-dd'));



INSERT INTO PREDMET VALUES ('IDS', 2016, 'Databazove systemy', 'LETNI', 1);
INSERT INTO PREDMET VALUES ('IZU', 2015, 'Zaklady umele inteligence', 'LETNI', 2);
INSERT INTO PREDMET VALUES ('ICP', 2013, 'Seminar C++', 'LETNI', 2);
INSERT INTO PREDMET VALUES ('IJC', 2014, 'Jazyk C', 'LETNI', 3);
INSERT INTO PREDMET VALUES ('ISJ', 2015, 'Skriptovaci jazyky', 'ZIMNI', 1);
INSERT INTO PREDMET VALUES ('IAL', 2016, 'Algoritmy a Pascal', 'ZIMNI', 3);

INSERT INTO PREDMET_V_OBORU SELECT 'IDS', 2016, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Pocitacove systemy';
INSERT INTO PREDMET_V_OBORU SELECT 'IJC', 2014, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Pocitacove systemy';
INSERT INTO PREDMET_V_OBORU SELECT 'IDS', 2016, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Grafika a multimedia';
INSERT INTO PREDMET_V_OBORU SELECT 'IAL', 2016, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Grafika a multimedia';
INSERT INTO PREDMET_V_OBORU SELECT 'ICP', 2013, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Grafika a multimedia';
INSERT INTO PREDMET_V_OBORU SELECT 'ISJ', 2015, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Inteligentni systemy';
INSERT INTO PREDMET_V_OBORU SELECT 'IAL', 2016, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Teoreticka informatika';
INSERT INTO PREDMET_V_OBORU SELECT 'IAL', 2016, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Paralelni systemy';
INSERT INTO PREDMET_V_OBORU SELECT 'ICP', 2013, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Pocitacove site';
INSERT INTO PREDMET_V_OBORU SELECT 'IZU', 2015, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Pocitacove site';
INSERT INTO PREDMET_V_OBORU SELECT 'IDS', 2016, ID_OBORU FROM OBOR WHERE NAZEV_OBORU = 'Pocitacove site';






INSERT INTO PREDMET_V_ROCNIKU VALUES ('IAL', 2016, 2);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('IAL', 2016, 1);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('IDS', 2016, 3);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('IDS', 2016, 2);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('IZU', 2015, 4);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('IZU', 2015, 5);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('ICP', 2013, 3);
INSERT INTO PREDMET_V_ROCNIKU VALUES ('IJC', 2014, 2);

INSERT INTO PRACOVNIK VALUES ('smrcka', 'Ales', 'Smrcka', 'A304');
INSERT INTO PRACOVNIK VALUES ('zendulka', 'Jaroslav', 'Zendulka', 'C215');
INSERT INTO PRACOVNIK VALUES ('smrz', 'Pavel', 'Smrz', 'L224');
INSERT INTO PRACOVNIK VALUES ('peringer', 'Petr', 'Peringer', 'A303');
INSERT INTO PRACOVNIK VALUES ('bartik', 'Zdenek', 'bartik', 'E106');
INSERT INTO PRACOVNIK VALUES ('honzik', 'Jan Maxmilian', 'Honzik', 'C227');
INSERT INTO PRACOVNIK VALUES ('dytrych', 'Jaroslav', 'Dytrych', 'L158');
INSERT INTO PRACOVNIK VALUES ('rysavy', 'Ondrej', 'Rysavy', 'B505');
INSERT INTO PRACOVNIK VALUES ('kolar', 'Dusan', 'Kolar', 'G101');
INSERT INTO PRACOVNIK VALUES ('krivka', 'Zbynek', 'Krivka', 'C204');
INSERT INTO PRACOVNIK VALUES ('kunovsky', 'Jiri', 'Kunovsky', 'A201');
INSERT INTO PRACOVNIK VALUES ('orsag', 'Filip', 'Orsag', 'S210');

INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IZU', 2015, 'smrz');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IDS', 2016, 'bartik');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('ICP', 2013, 'peringer');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IJC', 2014, 'peringer');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IZU', 2015, 'smrcka');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IZU', 2015, 'orsag');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IZU', 2015, 'kunovsky');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IZU', 2015, 'rysavy');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('ICP', 2013, 'kolar');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('ICP', 2013, 'dytrych');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IJC', 2014, 'kolar');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IJC', 2014, 'krivka');
INSERT INTO PRACOVNIK_V_PREDMETU VALUES ('IJC', 2014, 'honzik');



INSERT INTO AKCE VALUES (ID_AKCE_S.NEXTVAL, 'Pulsemestralni test', 'test', 'IZU', 2015);
INSERT INTO AKCE VALUES (ID_AKCE_S.NEXTVAL, 'Pulsemestralni test', 'test', 'IDS', 2016);
INSERT INTO AKCE VALUES (ID_AKCE_S.NEXTVAL, 'Demonstracni cviceni', 'cviceni', 'ICP', 2013);
INSERT INTO AKCE VALUES (ID_AKCE_S.NEXTVAL, 'Demonstracni cviceni', 'cviceni', 'IAL', 2016);
INSERT INTO AKCE VALUES (ID_AKCE_S.NEXTVAL, 'Prednaska', 'prednaska', 'IJC', 2014);
INSERT INTO AKCE VALUES (ID_AKCE_S.NEXTVAL, 'Cviceni SQL', 'cviceni', 'IDS', 2016);

INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2015-10-02 10:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2015-10-02 11:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2015-09-02 17:40', 'yyyy-mm-dd hh24:mi'), 'smrcka', 1);
INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2016-11-07 11:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2016-11-07 12:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2016-09-04 10:34', 'yyyy-mm-dd hh24:mi'), 'peringer', 2);
INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2014-07-13 09:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2014-07-13 10:30', 'yyyy-mm-dd hh24:mi'), TO_DATE('2014-09-11 12:23', 'yyyy-mm-dd hh24:mi'), 'zendulka', 2);
INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2016-06-12 20:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2016-06-12 20:20', 'yyyy-mm-dd hh24:mi'), TO_DATE('2015-09-12 17:12', 'yyyy-mm-dd hh24:mi'), 'bartik', 3);
INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2016-06-12 19:00', 'yyyy-mm-dd hh24:mi'), TO_DATE('2016-06-12 20:10', 'yyyy-mm-dd hh24:mi'), TO_DATE('2015-09-12 17:13', 'yyyy-mm-dd hh24:mi'), 'smrcka', 3);
INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2016-06-12 20:15', 'yyyy-mm-dd hh24:mi'), TO_DATE('2016-06-12 20:25', 'yyyy-mm-dd hh24:mi'), TO_DATE('2015-09-12 17:13', 'yyyy-mm-dd hh24:mi'), 'smrcka', 3);
INSERT INTO REZERVACE VALUES (ID_REZERVACE_S.NEXTVAL, TO_DATE('2016-06-12 20:30', 'yyyy-mm-dd hh24:mi'), TO_DATE('2016-06-12 21:30', 'yyyy-mm-dd hh24:mi'), TO_DATE('2015-09-12 17:13', 'yyyy-mm-dd hh24:mi'), 'smrcka', 3);

INSERT INTO UCEBNA VALUES ('D', 1, 5, 300);
INSERT INTO UCEBNA VALUES ('E', 1, 12, 150);
INSERT INTO UCEBNA VALUES ('E', 1, 5, 50);
INSERT INTO UCEBNA VALUES ('E', 1, 4, 60);
INSERT INTO UCEBNA VALUES ('A', 1, 12, 40);

INSERT INTO REZERVACE_NA_UCEBNU VALUES (1, 'D', '1', '5');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (2, 'D', '1', '5');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (2, 'A', '1', '12');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (3, 'E', '1', '4');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (4, 'E', '1', '5');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (5, 'E', '1', '5');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (6, 'E', '1', '5');
INSERT INTO REZERVACE_NA_UCEBNU VALUES (7, 'E', '1', '5');

INSERT INTO VYBAVENI (ID_VYBAVENI, BUDOVA, PATRO, OZNACENI, STUDENTSKY, DATUM_PORIZENI, DRUH, PRIPOJENI) VALUES (ID_VYBAVENI_S.NEXTVAL, 'D', 1, 5, 1, TO_DATE('2015-11-03', 'yyyy-mm-dd'), 'Projektor', 'HDMI, VGA');
INSERT INTO VYBAVENI (ID_VYBAVENI, BUDOVA, PATRO, OZNACENI, STUDENTSKY, DATUM_PORIZENI, DRUH, UHLOPRICKA, PROCESOR, RAM, HDD, OS1, OS2, RYCHLOST_SITE) VALUES (ID_VYBAVENI_S.NEXTVAL, 'A', 1, 12, 1, TO_DATE('2015-10-04', 'yyyy-mm-dd'), 'Pocitac', 24, 'Intel Core i9', 65536, 4096, 'CentOS 7', 'FreeBSD', 1000);
INSERT INTO VYBAVENI (ID_VYBAVENI, BUDOVA, PATRO, OZNACENI, STUDENTSKY, DATUM_PORIZENI, DRUH, UHLOPRICKA, PROCESOR, RAM, HDD, OS1, OS2, RYCHLOST_SITE) VALUES (ID_VYBAVENI_S.NEXTVAL, 'A', 1, 12, 1, TO_DATE('2015-10-04', 'yyyy-mm-dd'), 'Pocitac', 24, 'Intel Core i9', 65536, 4096, 'Windows 7', 'Windows 10', 1000);
INSERT INTO VYBAVENI (ID_VYBAVENI, BUDOVA, PATRO, OZNACENI, STUDENTSKY, DATUM_PORIZENI, DRUH, UHLOPRICKA) VALUES (ID_VYBAVENI_S.NEXTVAL, 'D', 1, 5, 1, TO_DATE('2015-11-03', 'yyyy-mm-dd'), 'Platno', 150);
INSERT INTO VYBAVENI (ID_VYBAVENI, BUDOVA, PATRO, OZNACENI, STUDENTSKY, DATUM_PORIZENI, DRUH, MODEL_VYBAVENI, PRIPOJENI) VALUES (ID_VYBAVENI_S.NEXTVAL, 'D', 1, 5, 1, TO_DATE('2015-11-03', 'yyyy-mm-dd'), 'Kamera','Canon', 'USD 3.1');


/*Zisti mena vsetkych vyucujicich, ktory ucia predmet IPP alebo IDS. */
SELECT DISTINCT PVP.ZKRATKA, P.JMENO, P.PRIJMENI
FROM PRACOVNIK P JOIN PRACOVNIK_V_PREDMETU PVP USING (LOGIN)
WHERE ZKRATKA = 'IPP' OR ZKRATKA='IDS';

/*Zjisti jmena vsech predmetu v letnim semestru v oboru 'Grafika a multimedia'  */
SELECT DISTINCT P.JMENO
FROM PREDMET P JOIN OBOR O ON (O.ID_OBORU = P.OBOR)
WHERE O.NAZEV_OBORU = 'Grafika a multimedia' AND P.SEMESTR = 'LETNI';

/*Zjisti oznaceni, kapacitu vsech uceben, ktere si zarezervoval
uzivatel s loginem peringer a serad je podle kapacity sestupne.*/
SELECT BUDOVA, OZNACENI, PATRO, U.KAPACITA
FROM UCEBNA U
JOIN REZERVACE_NA_UCEBNU RNU USING (BUDOVA, PATRO, OZNACENI)
JOIN REZERVACE R USING (ID_REZERVACE)
WHERE R.VYTVORIL = 'peringer'
ORDER BY KAPACITA DESC;

/* Pro kazdy obor spocitej pocet predmetu a serad je podle tohoto poctu. */
SELECT O.NAZEV_OBORU, COUNT(*)
FROM OBOR O
JOIN PREDMET_V_OBORU PVB ON (O.ID_OBORU = PVB.ID_OBORU)
GROUP BY O.NAZEV_OBORU
ORDER BY COUNT(*) DESC;

/* Vypis kapacitu vsech uceben podle budov, kde je celkova kapacita vetsi nez 200. */
SELECT U.BUDOVA, SUM(U.KAPACITA) AS KAPACITA
FROM UCEBNA U
GROUP BY U.BUDOVA
HAVING SUM(U.KAPACITA) > 200;

/* Vypis pocet kolizi v jednotlivych ucebnach. */
SELECT BUDOVA, PATRO, OZNACENI, COUNT(*) AS POCET_KOLIZI
FROM REZERVACE_NA_UCEBNU
WHERE ID_REZERVACE = (
  SELECT R1.ID_REZERVACE
  FROM REZERVACE R1
  CROSS JOIN REZERVACE R2
  WHERE R1.REZERVACE_ZACATEK BETWEEN R2.REZERVACE_ZACATEK AND R2.REZERVACE_KONEC
  AND R1.ID_REZERVACE < R2.ID_REZERVACE
)
GROUP BY BUDOVA, PATRO, OZNACENI;

/* Vyber vsechny predmety, ktere maji rezervaci. */
SELECT DISTINCT P.JMENO
FROM PREDMET P
JOIN AKCE A ON (P.ZKRATKA = A.PREDMET AND P.ROK = A.ROK)
WHERE EXISTS (SELECT * FROM REZERVACE R WHERE R.ID_AKCE=A.ID_AKCE);

/* Vyber vsechny studentske pocitace v budove A, vypis typ procesoru, pamet v GB a mistnost. */
SELECT PROCESOR, CONCAT(RAM / 1024, 'GB') AS PAMET_GB, CONCAT(CONCAT(BUDOVA, PATRO), OZNACENI) AS MISTNOST
FROM VYBAVENI
WHERE BUDOVA = 'A' AND DRUH='Pocitac' AND STUDENTSKY=1;

/* Vyber jmena vsech akci predmetu, ktere vyucuje Dr. Peringer. */
SELECT JMENO
FROM AKCE
WHERE PREDMET IN (SELECT ZKRATKA FROM PRACOVNIK_V_PREDMETU WHERE LOGIN = 'peringer');

SET SERVEROUTPUT ON;

CREATE OR REPLACE PROCEDURE PERCENT_DNA
(DEN IN DATE) IS
HODINY NUMBER;
ZACATEK DATE;
KONEC DATE;
POCET NUMBER;
PROCENTA NUMBER;
BEGIN
ZACATEK := DEN + INTERVAL '7' HOUR;
KONEC := DEN + INTERVAL '20' HOUR;
SELECT SUM(REZERVACE_KONEC-REZERVACE_ZACATEK)
INTO HODINY
FROM REZERVACE R JOIN REZERVACE_NA_UCEBNU RNU USING (ID_REZERVACE)
WHERE R.REZERVACE_ZACATEK BETWEEN ZACATEK AND KONEC;
SELECT COUNT(*) INTO POCET FROM UCEBNA;
HODINY := HODINY * 24;
PROCENTA := HODINY / ((KONEC - ZACATEK) * POCET);
PROCENTA := ROUND(PROCENTA, 2);
DBMS_OUTPUT.put_line(CONCAT(PROCENTA, '% vyuziti'));
EXCEPTION
WHEN zero_divide THEN
DBMS_OUTPUT.put_line('Delenie nulou - nie su ziadne ucebne');
WHEN no_data_found THEN
DBMS_OUTPUT.put_line('Chyba zoznam rezervacii');
END PERCENT_DNA;
/


CREATE OR REPLACE PROCEDURE JMENA_UCEBEN
AS
MENO VARCHAR(4);
OZNACENI_TMP UCEBNA.OZNACENI%TYPE;
CURSOR NAS_KURZOR IS
  SELECT * FROM UCEBNA;
BEGIN
FOR ITEM IN NAS_KURZOR
LOOP
OZNACENI_TMP := ITEM.OZNACENI;
MENO := CONCAT(ITEM.BUDOVA, ROUND(ITEM.PATRO));
IF ITEM.OZNACENI < 10 THEN
  MENO := CONCAT(MENO, '0');
END IF;
MENO := CONCAT(MENO, ROUND(OZNACENI_TMP));
DBMS_OUTPUT.put_line(MENO);
END LOOP;
END;
/




EXECUTE JMENA_UCEBEN();

EXECUTE PERCENT_DNA(TO_DATE('2016-06-12', 'YYYY-MM-DD'));
EXECUTE PERCENT_DNA(TO_DATE('2008-07-11', 'YYYY-MM-DD'));

EXPLAIN PLAN FOR
SELECT JMENO ,ROK, COUNT(*) AS POCET_VYUCUJUCICH
FROM PREDMET JOIN PRACOVNIK_V_PREDMETU USING(ZKRATKA, ROK)
             JOIN OBOR ON (OBOR.ID_OBORU = PREDMET.OBOR)
WHERE NAZEV_OBORU = 'Pocitacove systemy'
GROUP BY (JMENO, ROK);

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);

CREATE INDEX OBOR_INDEX ON OBOR (NAZEV_OBORU);

DROP INDEX OBOR_INDEX;


REVOKE ALL ON OBOR FROM XBUDAI00;
GRANT SELECT, UPDATE, INSERT, DELETE  ON OBOR TO XBUDAI00;


CREATE MATERIALIZED VIEW MV_1
NOLOGGING
CACHE
BUILD IMMEDIATE
REFRESH ON COMMIT
AS
  SELECT JMENO FROM PREDMET;

GRANT SELECT ON MV_1 TO XBUDAI00;
